{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","form/formFramework.js","containers/QuizCreator/QuizCreator.js","containers/Auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","React","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","questionNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","console","log","match","params","QuizWrapper","QuizList","renderQuizes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","createControl","config","validation","createOptionControl","number","required","QuizCreator","formControls","option1","option2","option3","option4","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","controlName","control","target","onSubmit","renderControls","Auth","isFormValid","email","password","minLength","loginHandler","registerHandler","onChangeHandler","validateControl","forEach","name","isValid","trim","is","AuthForm","renderInputs","App","path","component","Boolean","location","hostname","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b463f8c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3DB8k\",\"close\":\"Drawer_close__1EtwF\",\"active\":\"Drawer_active__3FDFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2jsCu\",\"open\":\"MenuToggle_open__2ZbMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__8r4DE\",\"QuizWrapper\":\"Quiz_QuizWrapper__12NZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2bUZe\",\"Question\":\"ActiveQuiz_Question__1lSUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__B2vO3\",\"success\":\"AnswerItem_success__15PCb\",\"error\":\"AnswerItem_error__2sLWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2o4hE\",\"success\":\"FinishedQuiz_success__3cnfU\",\"error\":\"FinishedQuiz_error__34wGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__wQ19D\",\"success\":\"Button_success__2nxd-\",\"error\":\"Button_error__1QRAk\",\"primary\":\"Button_primary__118i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2RH66\",\"invalid\":\"Input_invalid__3K8gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__IGo5x\",\"AuthForm\":\"Auth_AuthForm__3PBP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__kKI_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2QHSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2jtQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3GZj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1wVXj\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n         className={cls.join(' ')}\r\n         onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport {NavLink} from 'react-router-dom';\r\n \r\nconst links = [\r\n    {to: '/', label: 'List', exact: true},\r\n    {to: '/auth', label: 'Authorization', exact: false},\r\n    {to: '/quiz-creator', label: 'Create Quiz', exact: false} \r\n]\r\n\r\nclass Drawer extends React.Component {\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }\r\n    \r\n    renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                     to={link.to}\r\n                     exact={link.exact}\r\n                     activeClassName={classes.active}\r\n                     onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n            </nav>\r\n            { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer\r\n","import React from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer \r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                /> \r\n\r\n                <MenuToggle \r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (\r\n        <li \r\n        className={cls.join(' ')}\r\n        onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        { props.answers.map((answer,index) => {\r\n            return (\r\n                <AnswerItem \r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.questionNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.questionNumber} of {props.quizLength}</small>\r\n        </p>\r\n\r\n        <AnswersList \r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n         onClick={props.onClick}\r\n         className={cls.join(' ')}\r\n         disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                { props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n\r\n                        <li\r\n                         key={index}\r\n                        >\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                }) }\r\n            </ul>\r\n\r\n            <p>{successCount} right answers of {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Retry</Button>\r\n                <Link to='/'>\r\n                    <Button onClick={props.onRetry} type=\"success\">To the tests list</Button>\r\n                </Link>\r\n             </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\n\r\nclass Quiz extends React.Component {\r\n    state = {\r\n        results: {},\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        quiz: [\r\n            {   question: 'You work on a Javascript project. How do you prompt users with messages and at the same time requesting user inputs?',\r\n                rightAnswerId: 3,\r\n                id: 1,\r\n                answers: [\r\n                    {text: 'Alert()', id: 1},\r\n                    {text: 'Display()', id: 2},\r\n                    {text: 'Prompt()', id: 3},\r\n                    {text: 'Confirm()', id: 4}\r\n                ]\r\n            },\r\n            {   question: 'Which of the following function of Array object reverses the order of the elements of an array?',\r\n                rightAnswerId: 1,\r\n                id: 2,\r\n                answers: [\r\n                    {text: 'reverse()', id: 1},\r\n                    {text: 'push()', id: 2},\r\n                    {text: 'reduceRight()', id: 3},\r\n                    {text: 'reduce()', id: 4}\r\n                ]\r\n            },\r\n            {   question: 'How do you find the number with the highest value of x and y?',\r\n            rightAnswerId: 1,\r\n            id: 3,\r\n            answers: [\r\n                {text: 'Math.max(x, y)', id: 1},\r\n                {text: 'top(x, y)', id: 2},\r\n                {text: 'ceil(x, y)', id: 3},\r\n                {text: 'Math.ceil(x, y)', id: 4}\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandler = answerId => {\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0]\r\n            if (this.state.answerState[key] === 'success') {\r\n                return \r\n            }\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion]\r\n        const results = this.state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n \r\n            this.setState({\r\n                answerState: {[answerId]: 'success'},\r\n                results\r\n            })\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true\r\n                    }) \r\n                } else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    })\r\n                }\r\n\r\n                window.clearTimeout(timeout)\r\n            }, 1000)             \r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'},\r\n                results\r\n            })\r\n        }\r\n    }\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Quiz ID = ', this.props.match.params.id);\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Choose the answer</h1>\r\n\r\n                    {\r\n                        this.state.isFinished\r\n                        ? <FinishedQuiz\r\n                            results={this.state.results}\r\n                            quiz={this.state.quiz}\r\n                            onRetry={this.retryHandler}\r\n                        />\r\n                        : <ActiveQuiz \r\n                        question={this.state.quiz[this.state.activeQuestion].question}\r\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                        onAnswerClick={this.onAnswerClickHandler}\r\n                        quizLength={this.state.quiz.length}\r\n                        questionNumber={this.state.activeQuestion + 1}\r\n                        state={this.state.answerState}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","import React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport classes from './QuizList.module.css'\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return [1, 2, 3].map((quiz, index) => {\r\n            return (\r\n                <li\r\n                 key={index}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz}>\r\n                        Javascript Quiz {quiz}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Quiz List</h1>\r\n\r\n                    <ul>\r\n                        {this.renderQuizes()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n          )\r\n    }\r\n}\r\n \r\nexport default QuizList;","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n              type={inputType}\r\n              id={htmlFor}\r\n              value={props.value} \r\n              onChange={props.onChange}\r\n            />  \r\n\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage || 'Enter correct value'}</span>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Input"," export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { createControl } from '../../form/formFramework'\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Option ${number}`,\r\n        errorMessage: 'Filed cannot be empty',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Enter question',\r\n            errorMessage: 'Field cannot be empty'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz: [],\r\n        formControls: createFormControls()\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = () => {\r\n\r\n    }\r\n\r\n    createQuizHandler = () => {\r\n\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Fragment key={controlName + index}>\r\n                    <Input \r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    { index === 0 ? <hr /> : null}\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n     \r\n    render() { \r\n        return ( \r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Quiz Creator</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderControls() }\r\n\r\n                        <select></select>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                        >\r\n                            Add Question\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                        >\r\n                            Create Quiz\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n         )\r\n    }\r\n}\r\n \r\nexport default QuizCreator;","import React from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\n\r\nexport default class Auth extends React.Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Enter correct email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Enter correct password',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n\r\n    }\r\n\r\n    registerHandler = () => {\r\n        \r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n          return true\r\n        }\r\n    \r\n        let isValid = true\r\n    \r\n        if (validation.required) {\r\n          isValid = value.trim() !== '' && isValid\r\n        }\r\n    \r\n        if (validation.email) {\r\n          isValid = is.email(value) && isValid\r\n        }\r\n    \r\n        if (validation.minLength) {\r\n          isValid = value.length >= validation.minLength && isValid\r\n        }\r\n    \r\n        return isValid\r\n      }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n    \r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n    \r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n    \r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n      }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input \r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authorization</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        { this.renderInputs() }\r\n\r\n                        <Button \r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}  \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}  \r\n                            disabled={!this.state.isFormValid}  \r\n                        >\r\n                            Registration\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Auth from './containers/Auth/Auth'\n\nfunction App() {\n  return (\n    <Layout>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/\" component={QuizList} />\n        </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst app = (\n    <Router basename=\"/quiz-app\">\n        <App />\n    </Router>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}